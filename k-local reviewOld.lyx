#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass revtex4-1
\begin_preamble
\usepackage{microtype}
\usepackage{xspace}
\usepackage{amsfonts}
\usepackage{palatino}
\usepackage[]{algorithm2e}
\usepackage{MnSymbol}
\usepackage{bbm}
%\usepackage{hyperref}
%\usepackage[hyphenbreaks]{breakurl1}
\usepackage{url}
\usepackage{ragged2e}
\edef\UrlBreaks{\do\-\UrlBreaks}% after loading url or hyperref
\usepackage{accents} % needed for \underbar that's same as \bar (\underaccent)
\usepackage{microtype}

\usepackage{color}

\newcommand*{\mathcolor}{}
\def\mathcolor#1#{\mathcoloraux{#1}}
\newcommand*{\mathcoloraux}[3]{%
  \protect\leavevmode
  \begingroup
    \color#1{#2}#3%
  \endgroup
}

\newcommand{\hi}{$H_{\rm init}$\xspace}
\newcommand{\hf}{$H_{\rm final}$\xspace}
\end_preamble
\options notitlepage,showpacs,preprintnumbers,amsmath,amssymb,aps,nofootinbib
\use_default_options false
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Quadratization in Pseudo-Boolean Optimization and Adiabatic Quantum Computing
\end_layout

\begin_layout Author
Richard Tanburn
\begin_inset Formula $^{1,\,}$
\end_inset


\end_layout

\begin_layout Author Email

richard.tanburn@hertford.ox.ac.uk
\end_layout

\begin_layout Affiliation
\begin_inset Formula $^{1}$
\end_inset

Oxford University, Mathematical Institute, OX2 6GG, Oxford, UK.
 
\end_layout

\begin_layout Author
Nikesh S.
 Dattani
\begin_inset Formula $^{2,3}$
\end_inset


\end_layout

\begin_layout Author Email

dattani.nike@gmail.com
\end_layout

\begin_layout Affiliation
\begin_inset Formula $^{2}$
\end_inset

Oxford University, Hertford College, OX1 3BW, Oxford, UK,
\end_layout

\begin_layout Affiliation
\begin_inset Formula $^{3}$
\end_inset

McMaster University, Department of Chemistry and Chemical Biology, ___ ___,
 Hamilton, Canada.
\end_layout

\begin_layout Abstract
There is a ridiculous amount of literature in so many different places,
 in communities that do not talk to each other, and do not even understand
 each other's language.
\end_layout

\begin_layout Title
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard

\series bold
\emph on
Every
\series default
\emph default
 computation can be done by minimizing a Hamiltonian of the form:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
H=\sum_{i}^{n}\left(a_{i}z_{i}+b_{i}x_{i}\right)+\sum_{ij}^{n}\left(a_{ij}z_{i}z_{j}+b_{ij}z_{i}x_{j}+c_{ij}x_{i}z_{j}+d_{ij}x_{i}x_{j}\right),\label{eq:XZ+Z}
\end{equation}

\end_inset

where the 
\begin_inset Formula $z$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 variables denote the Pauli matrices:
\begin_inset Formula 
\begin{equation}
z\equiv\begin{pmatrix}1 & 0\\
0 & -1
\end{pmatrix},\,x\equiv\begin{pmatrix}0 & 1\\
1 & 0
\end{pmatrix},
\end{equation}

\end_inset

the 
\begin_inset Formula $a,b,c$
\end_inset

 and 
\begin_inset Formula $d$
\end_inset

 coefficients are complex numbers; and the Appendix will teach any unfamiliar
 readers how to interperate this notation.
\end_layout

\begin_layout Standard
We know that every computation can be done this way because the minimization
 can be done by adiabatic quantum computation (AQC) , and it has been proven
 in at least two different ways 
\begin_inset CommandInset citation
LatexCommand cite
key "Mizel2007,Aharonov2008"

\end_inset

 that AQC is can simulate any circuit-based quantum computation with only
 polynomial overhead, and we know that circuit-based quantum computation
 can simulate any classical computation with only polynomial overhead.
 If we remove all the terms in 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:XZ+Z"

\end_inset

 that have 
\begin_inset Formula $x$
\end_inset

 operators, we get the Ising Hamiltonian:
\begin_inset Formula 
\begin{equation}
H=\sum_{i}^{n}a_{i}z_{i}+\sum_{ij}^{n}a_{ij}z_{i}z_{j},\label{eq:ZZ+Z}
\end{equation}

\end_inset

and we no longer know of any proof that 
\series bold
\emph on
any
\series default
\emph default
 computation
\begin_inset CommandInset citation
LatexCommand cite
key "Gaitan2012,Bian2013"

\end_inset

 can be done by minimizing such a Hamiltonian with only polynomial overhead
 compared to circuit-based quantum computation or even classical computation,
 but plenty of very interesting problems can still be formulated as the
 minimization or aproximate minimization of an Ising Hamiltonian, such neural
 network training 
\begin_inset CommandInset citation
LatexCommand cite
key "Altaisky2016"

\end_inset

, computerized image denoising 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2009,Ishikawa2011,Ishikawa2014,Anthony2015"

\end_inset

, integer factorization 
\begin_inset CommandInset citation
LatexCommand cite
key "Dattani2015b"

\end_inset

, and Ramsey number determination 
\begin_inset CommandInset citation
LatexCommand cite
key "Gaitan2012,Bian2013"

\end_inset

, just to name a few.
 However unlike Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:XZ+Z"

\end_inset

, plenty of devices that can minimize Ising Hamiltonians already exist,
 and with further restrictions on the 
\begin_inset Formula $a$
\end_inset

 coefficients, D-Wave has made devices with 
\begin_inset Formula $n=2048$
\end_inset

, and this number has doubled every year since..
 , a phenomenon analogous to Moore's law of classical computer growth, which
 has become known as Rose's Law.
\end_layout

\begin_layout Standard
Furthermore,
\series bold
\emph on
 no classical computer has ever been able to minimize certain Ising Hamiltonians
 faster than the D-Wave machines to date
\series default
\emph default
, so being able to turn computations into the form of Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ZZ+Z"

\end_inset

 appears to be promising in terms of demonstrating the first useful application
 of quantum supremacy (which is the term used for quantum devices outperforming
 classical computation devices).
 Moreover, for problems like neural networks and computerized image denoising,
 the best known classical computation algorithms also work by turning the
 problems into minimizations of Ising Hamiltonians, so even if you are happy
 with continuing to only use classical computer and have no interest in
 using quantum annealing devices, turning a problem into an Ising Hamiltonian
 minimization problem can be very powerful for some computations.
\end_layout

\begin_layout Standard
For neural networks, image deoising, integer factorization, and Ramsey number
 determination, it is rather easy to turn the problem into the form:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
H=\sum_{i}^{n}a_{i}z_{i}+\sum_{ij}^{n}a_{ij}z_{i}z_{j}+\sum_{ijk}^{n}a_{ijk}z_{i}z_{j}z_{k}+\sum_{ijkl}^{n}a_{ijkl}z_{i}z_{j}z_{k}z_{l}\ldots,\label{eq:Z+ZZ+ZZZ+ZZZZ...}
\end{equation}

\end_inset

but then 
\series bold
\emph on
quadratizing
\series default
\emph default
 Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Z+ZZ+ZZZ+ZZZZ..."

\end_inset

 into the Ising form often requires the introduction of auxiliary variables,
 and since minimizing Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Z+ZZ+ZZZ+ZZZZ..."

\end_inset

 often has cost 
\begin_inset Formula $\mathcal{O}(2^{n})$
\end_inset

, it is often extremely desirable to do the quadratization with 
\series bold
\emph on
as few auxiliary variables as possible
\series default
\emph default
.
 Apart from quadratizing with minimum number of variables, it is also often
 desirable to reduce the number of non-zero 
\begin_inset Formula $a$
\end_inset

 coefficients, to keep the non-zero 
\begin_inset Formula $a$
\end_inset

 coefficients bounded or with specific values, to reduce the number of positive
 (non-submodular) 
\begin_inset Formula $a$
\end_inset

 coefficients, to reduce the spectral ratio of the Hamiltonian (`maximum
 energy minus minimum energy' divided by `energy of the second minimum minus
 the energy of the global minimum'), and to reduce the number of energy
 levels close to the global minimum.
 Adjusting the energy langscape in order to accomplish all of these things
 apart from reducing the number of auxiliary variables needed has been termed
 Energy Landscape Manipulation (ELM) which is an entirely separate topic,
 sometimes even more important than quadratizing with as few auxiliary variables
 as possible, nonetheless this Review simply focuses on methods for the
 latter aim.
\end_layout

\begin_layout Standard
It has been shown in 
\begin_inset CommandInset citation
LatexCommand cite
key "Anthony2015"

\end_inset

 that a general function of the form Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Z+ZZ+ZZZ+ZZZZ..."

\end_inset

 with degree 
\begin_inset Formula $k$
\end_inset

, can be quadratized using 
\begin_inset Formula $O(n^{k/2})$
\end_inset

 auxiliary variables.
 However, it is often possible to quadratize with far fewer auxiliary variables
 (for example when the auxiliary variables for quadratizing one term are
 reused to quadratize other terms that have some of the same variables in
 them) or to quadratize without any auxiliaries at all (ex.
 if a Groebner basis can be found with all basis functions being quadratic,
 or if some symmetries in the Hamiltonian can be found that make it possible
 to quadratize without auxiliaries).
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Also shown in 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2011"

\end_inset

 that a PSB in 
\begin_inset Formula $n$
\end_inset

 variables requires at most 
\begin_inset Formula $2^{n}-1$
\end_inset

 auxiliary variables (by representing it as a function of degree 
\begin_inset Formula $n$
\end_inset

).
\end_layout

\begin_layout Plain Layout
Positive quadratic terms (non-submodular), particularly with large positive
 coefficients, are hard for a lot of reasons, classically (Ishikawa TGBMM....)
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2011"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Part
Hamiltonians with only 
\begin_inset Formula $z$
\end_inset

 terms (pseudo-Boolean functions)
\end_layout

\begin_layout Section
Methods that introduce ZERO auxiliary variables
\end_layout

\begin_layout Subsection
Groebner Bases
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
A Groebner basis is a set of equations representing the zeros of a polynomial
 (e.g.
 of the form Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Z+ZZ+ZZZ+ZZZZ..."

\end_inset

) such that the number of variables is the same, and the zeros of Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Z+ZZ+ZZZ+ZZZZ..."

\end_inset

 are the same as the zeros of all equations of the Groebner basis.
 If a Groebner basis can be found such that all equations are quadratic,
 then quadratization of Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Z+ZZ+ZZZ+ZZZZ..."

\end_inset

 is as simple as finding the Groebner basis.
 
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Nike, this is NOT true.
 Once we have the Groebner basis, we still need a single non-negative expression
 to minimize.
 This involves finding appropriate coefficients of the equations to add
 together (non-trivial and what they do in the 1Qbit paper) OR squaring
 each one, which gives a quartic.
 Richard: Ok, I remember that part of the paper.
 As for the second approach, is it possible to find a Groebner basis of
 linear functions instead, and then to get a quadratic by squaring and summing?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Use the multivariate extension of Gaussian elimination to find a different
 set of equations which have the same vanishing set.
 It has been shown these can be used to reduce and embed factorisations
 of all bi-primes up to 200,000 
\begin_inset CommandInset citation
LatexCommand cite
key "Dridi2016"

\end_inset

.
 Some work has been done in the field of 
\begin_inset Quotes eld
\end_inset

boolean Groebner bases
\begin_inset Quotes erd
\end_inset

, but these consider bases of a boolean ring over 
\begin_inset Formula $\mathbb{F}_{2}$
\end_inset

 rather than 
\begin_inset Formula $\mathbb{Q}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Itemize
\begin_inset Formula $0$
\end_inset

 auxiliary variables needed,
\end_layout

\begin_layout Itemize
\begin_inset Formula $2^{2^{\mathcal{O}(n)}}$
\end_inset

 in general, 
\begin_inset Formula $d^{\mathcal{O}(n^{2})}$
\end_inset

 if the zeros of the equations form a set of discrete points, where 
\begin_inset Formula $d$
\end_inset

 is the degree of the polynomial and 
\begin_inset Formula $n$
\end_inset

 is the number of variables 
\begin_inset CommandInset citation
LatexCommand cite
key "Bardet2002"

\end_inset

.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
No auxiliary variables needed.
\end_layout

\begin_layout Itemize
Works even when the variables are not binary.
\begin_inset Note Comment
status open

\begin_layout Plain Layout
they have to be rationals? or could they be any real or any complex number?
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
Best algorithms for finding Groebner bases scale double exponentially in
 
\begin_inset Formula $n.$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Plain Layout

\color red
Richard: too much algebra here.
 People come from different backgrounds.
 Some people don't know what rings are, and some people get scared when
 they see fancy symbols like 
\begin_inset Formula $\mathcal{V}$
\end_inset

.
 It should be possible to describe this to A-level students because that
 way we know everyone (chemists, physicists, engineers, computer scientsists,
 etc.) will understand it.
 I guess I already did this in a way that A-level students would understand,
 in the 
\begin_inset Quotes eld
\end_inset

summary section
\begin_inset Quotes erd
\end_inset

.
 For 
\begin_inset Quotes eld
\end_inset

descriptions
\begin_inset Quotes erd
\end_inset

 I envision that we explain exactly how to DO the methods, and for Groebner
 bases, I guess this would be equivalent to listing the known algorithms
 (such as Buchberger's) and known codes available.
 I guess another description that could be added is the method in the 1Qbit
 paper, where they have a 
\begin_inset Quotes eld
\end_inset

max_cutoff
\begin_inset Quotes erd
\end_inset

 and a 
\begin_inset Quotes eld
\end_inset

min_cutoff
\begin_inset Quotes erd
\end_inset

 and Groebnerized everything in between there, or something like that.
\end_layout

\begin_layout Plain Layout
Instead of solving the equations 
\begin_inset Formula $f_{1}=f_{2}=...=f_{n}=0$
\end_inset

 directly, Groebner bases consider the points on which they vanish, also
 known as the 
\emph on
algebraic variety
\emph default
 
\begin_inset Formula $\mathcal{V}(f_{1},...,f_{n})$
\end_inset

.
 Groebner bases are a 'pleasant' generating set for this variety.
\end_layout

\begin_layout Plain Layout
This is done by first defining a monomial ordering on the polynomial ring
 
\begin_inset Formula $F[z_{1},...,z_{n}]$
\end_inset

, chosen so that higher order mononials are considered 'bigger' than low
 order monomials.
 Monomials of the same degree are sorted by the lexicographic ordering of
 the variables.
 Then define the leading term of a polynomial 
\begin_inset Formula $f$
\end_inset

 with respect to the monomial ordering to be 
\begin_inset Formula $\mathrm{LT}(f)$
\end_inset

, the largest monomial of 
\begin_inset Formula $f$
\end_inset

.
 Then 
\begin_inset Formula $g_{1},...,g_{m}$
\end_inset

 is a Grobner basis if 
\begin_inset Formula $\mathcal{V}(f_{1},...,f_{n})$
\end_inset

=
\begin_inset Formula $\mathcal{V}(g_{1},...,g_{m})$
\end_inset

 (they have the same vanishing set) and for every function 
\begin_inset Formula $f$
\end_inset

 in the ideal of 
\begin_inset Formula $\left\langle f_{1},...f_{n}\right\rangle $
\end_inset

, we have that the leading term of 
\begin_inset Formula $f$
\end_inset

 is divisible by the leading term of 
\begin_inset Formula $g_{i}$
\end_inset

 for some 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Plain Layout
Grobner bases are very useful because they allow computation of remainders,
 using the multivariate division algorithm.
 They are useful in this context since the polynomials of the Grobner basis
 will have smaller degrees than our original function, reducing the need
 for reduction by other means.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Example
\end_layout

\begin_layout Standard
To quadratize the Hamiltonian: 
\begin_inset Formula 
\[
H_{4{\rm -local}}=(z_{1}z_{2}-z_{3}z_{4}-1)^{2},
\]

\end_inset

we first linearize the part that is being squared.
 In Mathematica, the 
\begin_inset Formula ${\tt GroebnerBasis}$
\end_inset

 function gives us:
\end_layout

\begin_layout Standard
Then when we square it we get a quadratic function:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
H_{2{\rm -local}}=1-2z_{1}-2z_{2}+3z_{3}+3z_{4}-2z_{3}z_{4}.
\]

\end_inset

In both cases, the only global minima occur when:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
(z_{3,}z_{4})=1,\,z_{1}\,\text{or}\,z_{2}=0.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard

\color red
Wait, this is far from true!
\end_layout

\begin_layout Subsection
Deduction Reduction (Deduc-reduc)
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
We look for 
\emph on
deductions 
\emph default
(e.g.
 
\begin_inset Formula $z_{1}z_{2}=0$
\end_inset

) that hold at the global minimum.
 These can be found by 
\emph on
a priori 
\emph default
knowledge of the given problem, or by enumerating solutions
\begin_inset Note Comment
status open

\begin_layout Plain Layout
evaluations? cases?
\end_layout

\end_inset

 of a small subset of the variables.
 We can then substitute high-order terms using the low-order terms, and
 add on a penalty term to preserve the ground states.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Tanburn2015c"

\end_inset


\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Itemize
\begin_inset Formula $0$
\end_inset

 auxiliary variables needed.
 Given a deduction, the computational run time is proportional to the number
 of terms in the Hamiltonian.
\end_layout

\begin_layout Itemize
The computational cost of the search for deductions is difficult to estimate.
 The approximate worst-case complexity is 
\begin_inset Formula $\mathcal{O}(n^{d+1}2^{m})$
\end_inset

 where 
\begin_inset Formula $m$
\end_inset

 is the number of variables in a 'small' problem, 
\begin_inset Formula $n$
\end_inset

 is the total number of qubits and 
\begin_inset Formula $d$
\end_inset

 is the maximum degree of deductions we are searching for.
 We suggest 
\begin_inset Formula $10\le m\le20$
\end_inset

, so that a small problem involves checking roughly 
\begin_inset Formula $1,000$
\end_inset

 to 
\begin_inset Formula $1,000,000$
\end_inset

 states, and 
\begin_inset Formula $d=2$
\end_inset

.
 See the appendix for more details.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
No auxiliary variables needed.
\end_layout

\begin_layout Itemize
Able to use extra information about a given problem.
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
When deductions cannot be determined naturally (as in the Ramsey number
 determination problem, see Example 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Example_Ramsey_deduc_reduc"

\end_inset

), deductions need to be found by `brute force', which scales exponentially
 with respect to 
\begin_inset Formula $m.$
\end_inset

 For highly connected systems (systems with a large number of non-zero 
\begin_inset Formula $a$
\end_inset

 coefficients), the value of 
\begin_inset Formula $m$
\end_inset

 required to find even one deduction can be prohibitively large.
\end_layout

\begin_layout Itemize
Deductions do not always exist, or are too hard to find.
\end_layout

\begin_layout Subsubsection*
Example
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Examples are difficult to illustrate in a paper, since they involve searching
 for patterns in exhaustive searches.
 
\end_layout

\end_inset

Consider the Hamiltonian: 
\begin_inset Formula 
\[
H_{4{\rm -local}}=z_{1}z_{2}(10+z_{3}+z_{3}z_{4})+z_{1}(z_{3}-3)+z_{2}(z_{3}-2z_{3}-z_{4}-1)+F(x_{3},x_{4},x_{5},\ldots,x_{N})
\]

\end_inset

 where 
\begin_inset Formula $F$
\end_inset

 is any polynomial in 
\begin_inset Formula $z_{i}$
\end_inset

 for 
\begin_inset Formula $3\le i$
\end_inset

.
\end_layout

\begin_layout Standard
Since the 
\begin_inset Formula $10$
\end_inset

 coefficient of 
\begin_inset Formula $z_{1}z_{2}$
\end_inset

 is greater than the sum of all of the other coefficients involving 
\begin_inset Formula $z_{1}$
\end_inset

 or 
\begin_inset Formula $z_{2}$
\end_inset

, it must be the case that 
\begin_inset Formula $z_{1}z_{2}=0$
\end_inset

.
 Specifically, for the 4 assignments of 
\begin_inset Formula $(z_{3},z_{4})$
\end_inset

, we see that 
\begin_inset Formula $z_{1}z_{2}=0$
\end_inset

 at every minimum of 
\begin_inset Formula $H_{4{\rm -local}}-F$
\end_inset

.
\end_layout

\begin_layout Standard
Using deduc-reduc we have:
\begin_inset Formula 
\[
H_{2{\rm -local}}=12z_{1}z_{2}+z_{1}(z_{3}-3)+z_{2}(z_{3}-2z_{3}-z_{4}-1)+F(x_{3},x_{4},x_{5},\ldots,x_{N})
\]

\end_inset


\end_layout

\begin_layout Standard
which has the same global minima as 
\begin_inset Formula $H_{4-local}$
\end_inset

 but one less quartic and one less cubic term.
\end_layout

\begin_layout Subsubsection*
Bibliography
\end_layout

\begin_layout Itemize
Deduc-reduc paper (original reference, and application to integer factorization)
 
\begin_inset CommandInset citation
LatexCommand cite
key "Tanburn2015c"

\end_inset


\end_layout

\begin_layout Subsection
ELC Reduction
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
An Excludable Local Configuration (ELC) is a partial assignment of variables
 that cannot possibly give the global minimum.
 We can then add on a term that corresponds to this ELC.
 In practice we can eliminate all monomials with a variable in which a variable
 is set to 0, and reduce any variable set to 1.
 Given a general Hamiltonian we can try to find ELCs by enumerating solutions
\begin_inset Note Comment
status open

\begin_layout Plain Layout
evaluations? cases?
\end_layout

\end_inset

 of a small subset of the problem 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2014"

\end_inset

.
 
\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Itemize
\begin_inset Formula $0$
\end_inset

 auxiliary variables needed,
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{O}\left(2^{m}{n \choose m}\right)$
\end_inset

 operations required to enumerate all possible cases for all possible subsets
 of size 
\begin_inset Formula $m\le n$
\end_inset

 variables.
\end_layout

\begin_layout Standard
Approximate methods exist which have been shown to be much faster and give
 good approximations to the global minimum 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2014"

\end_inset

.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
No auxiliary variables needed.
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
ELCs need to be found by `brute force', which scales exponentially with
 respect to 
\begin_inset Formula $m.$
\end_inset

 
\end_layout

\begin_layout Itemize
ELCs do not always exist.
\end_layout

\begin_layout Subsubsection*
Example
\end_layout

\begin_layout Standard
Consider the Hamiltonian: 
\begin_inset Formula 
\[
H_{{\rm 3-local}}=z_{1}z_{2}+z_{2}z_{3}+z_{3}z_{4}-4z_{1}z_{2}z_{3}.
\]

\end_inset

If 
\begin_inset Formula $z_{1}z_{2}z_{3}=0$
\end_inset

, no assignment of our variables will we be able to reach a lower energy
 than if 
\begin_inset Formula $z_{1}z_{2}z_{3}=1$
\end_inset

.
 Hence 
\begin_inset Formula $(z_{1},z_{2},z_{3})=(1,0,0)$
\end_inset

 is a Local Excludable Configuration (ELC) and we can form the polynomial:
\begin_inset Formula 
\[
H_{2\text{-local}}=H_{{\rm 3-local}}+4z_{1}(1-z_{2})(1-z_{3})=z_{1}z_{2}+z_{2}z_{3}+z_{3}z_{4}+4z_{1}-4z_{1}z_{2}-4z_{1}z_{3}.
\]

\end_inset

In both cases, the only global minima occur when:
\end_layout

\begin_layout Subsubsection*
Bibliography
\end_layout

\begin_layout Itemize
ELC paper (original reference, and application to computerized image denoising)
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2014"

\end_inset


\end_layout

\begin_layout Subsection
Split-reduc
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
It has been shown in 
\begin_inset CommandInset citation
LatexCommand cite
key "Okada2015"

\end_inset

 that, if multiple runs of a minimization algorithm is permitted, it is
 possible to reduce a lot of the problem by conditioning on the most connected
 variables.
 We call each of these operations a 
\emph on
split
\emph default
.
\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Standard
Exponential in the number of splits, as the number of problems to solve
 doubles with every split.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
This method can be applied to any problem and can be very effective on problems
 with a few very connected variables.
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
Exponential cost in the worst case, often only able to split a few times.
\end_layout

\begin_layout Subsubsection*
Example
\end_layout

\begin_layout Standard
Consider the simple objective function 
\begin_inset Formula 
\[
H=1+z_{1}z_{2}z_{5}+z_{1}z_{6}z_{7}z_{8}+z_{3}z_{4}z_{8}-z_{1}z_{3}z_{4}.
\]

\end_inset

In order to quadratise 
\begin_inset Formula $H$
\end_inset

, we first have to choose a variable to split over.
 In this case 
\begin_inset Formula $z_{1}$
\end_inset

 is the obvious choice since it is present in the most terms and contributes
 to the quartic term.
\end_layout

\begin_layout Standard
We then obtain two different problems:
\begin_inset Formula 
\begin{eqnarray*}
H_{0} & = & 1+z_{3}z_{4}z_{8}\\
H_{1} & = & 1+z_{2}z_{5}+z_{6}z_{7}z_{8}+z_{3}z_{4}z_{8}-z_{3}z_{4}.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
At this point, we could split 
\begin_inset Formula $H_{0}$
\end_inset

 again and solve it entirely, or use a qubit we saved in the previous split
 to quadratize our only problem.
\end_layout

\begin_layout Standard
To solve 
\begin_inset Formula $H_{1}$
\end_inset

, we can split again on 
\begin_inset Formula $z_{8}$
\end_inset

, resulting in problems:
\begin_inset Formula 
\begin{eqnarray*}
H_{1,0} & = & 1+z_{2}z_{5}+z_{6}z_{7}\\
H_{1,1} & = & 1+z_{2}z_{5}+z_{3}z_{4}.
\end{eqnarray*}

\end_inset

Now both of these problems are solvable by AQC.
 Hence we have reduced our original, hard problem into 3 easy problems,
 requiring only 2 extra runs of our minimization algorithm without needing
 any auxiliary variables.
\end_layout

\begin_layout Section
Methods that introduce auxiliary variables to quadratize a SINGLE term
\end_layout

\begin_layout Subsection
Negative Term Reduction 
\begin_inset CommandInset label
LatexCommand label
name "sec:Negative-Monomial-Reduction"

\end_inset


\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
For a negative term 
\begin_inset Formula $-z_{1}z_{2}...z_{k}$
\end_inset

, introduce a single auxiliary variable 
\begin_inset Formula $a$
\end_inset

 and perform the substitution
\emph on
 
\emph default

\begin_inset Formula $-z_{1}z_{2}...z_{k}\mapsto(n-1-\sum z_{i})a$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "Anthony2015"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2011"

\end_inset

.
\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Itemize
1 auxiliary variable for each 
\begin_inset Formula $k$
\end_inset

-local term.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
All resulting quadratic terms are submodular (have negative coefficients).
\end_layout

\begin_layout Itemize
Can reduce arbitrary order terms with only 1 auxiliary.
\end_layout

\begin_layout Itemize
Can be generalised so that one variable can be made to work for multiple
 terms.
 (I can't find anyone saying this, but I can prove it.
 Shall we put it in an appendix?)
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
Only works for negative terms.
\end_layout

\begin_layout Subsubsection*
Example 1
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
H_{{\rm 6-local}} & =-z_{1}z_{2}z_{3}z_{4}z_{5}z_{6},
\end{align*}

\end_inset

has a unique minimum energy of -1 when all 
\begin_inset Formula $z$
\end_inset

's are 1.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
H_{{\rm 2-local}}=5a-z_{1}a-z_{2}a-z_{3}a-z_{4}a-z_{5}a-z_{6}a
\end{equation}

\end_inset

has the same unique minimum energy, and it occurs at the same place (all
 
\begin_inset Formula $z$
\end_inset

's being 1), with 
\begin_inset Formula $a=1$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Example 2
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
H_{{\rm 5-local}} & =-z_{1}z_{2}z_{3}z_{4}z_{5}-z_{1}z_{2}z_{3}z_{4}z_{6},
\end{align*}

\end_inset

has a unique minimum energy of -2 when all 
\begin_inset Formula $z$
\end_inset

's are 1.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
H_{{\rm 2-local}}=(3-z_{1}-z_{2}-z_{3}-z_{4})(z_{5}+z_{6})a
\end{equation}

\end_inset

has the same unique minimum energy, and it occurs at the same place, with
 
\begin_inset Formula $a=1$
\end_inset

.
\end_layout

\begin_layout Subsection
Positive Term Reduction
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
Quadratize positive terms in isolation 
\begin_inset CommandInset citation
LatexCommand cite
key "Boros2014"

\end_inset

.
 By considering the negated literals 
\begin_inset Formula $\bar{z}_{i}=1-z_{i}$
\end_inset

, we recursively apply the previous method to 
\begin_inset Formula $z_{1}z_{2}\ldots z_{k}=-\bar{z}_{1}z_{2}\ldots z_{k}+z_{2}z_{3}\ldots z_{k}$
\end_inset

.
 The final identity is:
\begin_inset Formula 
\[
z_{1}z_{2}\ldots z_{k}=\min_{a}\big\{\sum_{i=1}^{k-2}a_{i}(k-i-1+z_{i}-\sum_{j=i+1}^{k}z_{j})\big\}+z_{k-1}z_{k}
\]

\end_inset


\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Itemize
\begin_inset Formula $k-2$
\end_inset

 auxiliary variables for each 
\begin_inset Formula $k$
\end_inset

-local term.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
Works for positive monomials.
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
\begin_inset Formula $k-1$
\end_inset

 non-submodular quadratic terms.
\end_layout

\begin_layout Subsubsection*
Example
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
z_{1}z_{2}z_{3}z_{4} & = & \min_{a}{a_{1}(2+z_{1}-z_{2}-z_{3}-z_{4})+a_{2}(1+z_{2}-z_{3}-z_{4})}+z_{3}z_{4}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
By flipping and applying 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Negative-Monomial-Reduction"

\end_inset

 alternatively, we get a nice way to reduce a quartic using only 2 variables
 and with only 2 positive terms and much less connectivity:
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\begin{eqnarray*}
z_{1}z_{2}z_{3}z_{4} & \mapsto & z_{2}z_{3}z_{4}-\bar{z}_{1}z_{2}z_{3}z_{4}\\
 & \mapsto & z_{2}z_{3}z_{4}+\big(3a_{1}-a_{1}(\bar{z}_{1}+z_{2}+z_{3}+z_{4})\big)\\
 & \mapsto & z_{3}z_{4}-\bar{z}_{2}z_{3}z_{4}+\big(3a_{1}-a_{1}(\bar{z}_{1}+1-\bar{z}_{2}+z_{3}+z_{4})\big)\\
 & \mapsto & z_{3}z_{4}+\big(2a_{2}-a_{2}(\bar{z}_{2}+z_{3}+z_{4}\big)\big)+\big(3a_{1}-a_{1}(\bar{z}_{1}+1-\bar{z}_{2}+z_{3}+z_{4})\big)\\
 & \mapsto & z_{3}z_{4}+a_{2}+a_{2}z_{2}-a_{2}z_{3}-a_{2}z_{4}+2a_{1}+a_{1}z_{1}-a_{1}z_{2}-a_{1}z_{3}-a_{1}z_{4}
\end{eqnarray*}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ishikawa's Symmetric Reduction (Positive Term Reduction)
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
Quadratize positive terms in isolation 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2011"

\end_inset

.
 This method rewrites a term using symmetric polynomials, so all possible
 quadratic terms are produced and they are all non-submodular: 
\begin_inset Formula 
\[
z_{1}...z_{k}\mapsto\sum_{i=1}^{n_{k}}a_{i}(c_{i,d}(-\sum_{j=1}^{k}z_{j}+2i)-1)+\sum_{i<j}z_{i}z_{j},
\]

\end_inset

where 
\begin_inset Formula $n_{k}=\left\lfloor \frac{k-1}{2}\right\rfloor $
\end_inset

 and 
\begin_inset Formula $c_{i,k}=\begin{cases}
1, & i=n_{d}\text{ and }k\text{ is odd,}\\
2, & \text{else.}
\end{cases}$
\end_inset


\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\lfloor \frac{k-1}{2}\right\rfloor $
\end_inset

 auxiliary variables for each 
\begin_inset Formula $k$
\end_inset

-order term
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
Works for positive monomials.
 About half as many auxiliary variables for each 
\begin_inset Formula $k$
\end_inset

-order term as the previous method.
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{O}(k^{2})$
\end_inset

 quadratic terms are created, which may make chimerization more costly.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\frac{k(k-1)}{2}$
\end_inset

 non-submodular terms.
\end_layout

\begin_layout Itemize
Worse than the previous method for quartics, with respect to submodularity.
\end_layout

\begin_layout Subsubsection*
Examples
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
z_{1}z_{2}z_{3}z_{4} & = & \min_{a}(3-2z_{1}-2z_{2}-2z_{3}-2z_{4})a+z_{1}z_{2}+z_{1}z_{3}+z_{1}z_{4}+z_{2}z_{3}+z_{2}z_{4}+z_{3}z_{4}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
Asymmetric Reduction 
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
Similar to other methods of reducing one term, this method can reduce a
 positive cubic monomial into quadratic terms using only one auxiliary variable,
 which introducing fewer non-submodular terms than the symmetric version.
\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Standard
1 auxiliary qubit per positive cubic term.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
Works on positive monomials.
\end_layout

\begin_layout Itemize
Fewer non-submodular terms than Ishikawa Reduction.
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
Only been shown to work for cubics.
\end_layout

\begin_layout Subsubsection*
Example
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
z_{1}z_{2}z_{3}\mapsto a-z_{2}a-z_{3}a+z_{1}a+z_{2}z_{3}
\]

\end_inset


\end_layout

\begin_layout Subsubsection*
Bibliography
\end_layout

\begin_layout Itemize
\begin_inset CommandInset citation
LatexCommand cite
key "Gallagher2011"

\end_inset


\end_layout

\begin_layout Subsection
Bit-flipping
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
For any variable 
\begin_inset Formula $z$
\end_inset

, we can consider the negation 
\begin_inset Formula $\bar{z}=1-z$
\end_inset

.
 The process of exchanging 
\begin_inset Formula $z$
\end_inset

 for 
\begin_inset Formula $\bar{z}$
\end_inset

 is called 
\emph on
flipping
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2011"

\end_inset

.
 Using bit-flipping, an arbitrary function in 
\begin_inset Formula $n$
\end_inset

 variables can be represented using at most 
\begin_inset Formula $2^{(n-2)}(n-3)+1$
\end_inset

 variables, though this is a gross overestimate.
\end_layout

\begin_layout Standard
Can be used in many different ways:
\end_layout

\begin_layout Enumerate
Flipping positive terms and using 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Negative-Monomial-Reduction"

\end_inset

, recursively.
\end_layout

\begin_layout Enumerate
For 
\begin_inset Formula $\alpha<0$
\end_inset

, we can reduce 
\begin_inset Formula $\alpha\bar{z}_{1}\bar{z}_{2}...\bar{z}_{k}$
\end_inset

 very efficiently so submodular form using 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Negative-Monomial-Reduction"

\end_inset

.
 A generalised version exists for arbitrary combinations of flips in the
 monomial which makes reduction entirely submodular 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2011"

\end_inset

.
\end_layout

\begin_layout Enumerate
When we have quadratized we can minimise the number of non-submodular terms
 by flipping.
\end_layout

\begin_layout Enumerate
We can make use of both 
\begin_inset Formula $z_{i}$
\end_inset

 and 
\begin_inset Formula $\bar{z}_{i}$
\end_inset

 in the same Hamiltonian by adding on a sufficiently large penalty term:
 
\begin_inset Formula $\lambda(z_{i}+\bar{z}_{i}-1)^{2}=\lambda(1+2z_{i}\bar{z}_{i}-z_{i}-\bar{z}_{i})$
\end_inset

.
 This is similar to the ideas in Substition Reduction or deduc-reduc.
 In this way, given a quadratic in 
\begin_inset Formula $n$
\end_inset

 variables we can make sure it only has at most 
\begin_inset Formula $n$
\end_inset

 nonsubmodular terms if we are willing to use the extra 
\begin_inset Formula $n$
\end_inset

 negation variables as well (so we have 
\begin_inset Formula $2n$
\end_inset

 variables in total).
 (This is my own claim.
 Is it worth keeping?)
\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Standard
None, as replacing 
\begin_inset Formula $z_{i}$
\end_inset

 with it's negation 
\begin_inset Formula $\bar{z}_{i}$
\end_inset

 costs nothing except a trivial symbolic expansion.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
Cheap and effective way of improving submodularity.
\end_layout

\begin_layout Itemize
Can be used to combine terms in clever ways, making other methods more efficient.
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
Unless form of the Hamiltonian is known, spotting these 'factorizations'
 using negations is going to be impossible.
\end_layout

\begin_layout Itemize
If we want to use 
\begin_inset Formula $z$
\end_inset

 and 
\begin_inset Formula $\bar{z}$
\end_inset

 we need an auxiliary variable.
\end_layout

\begin_layout Subsubsection*
Example
\end_layout

\begin_layout Standard
Consider
\end_layout

\begin_layout Subsubsection*
\begin_inset Formula 
\begin{eqnarray*}
H & = & 3z_{1}z_{2}+z_{2}z_{3}+2z_{1}z_{4}-4z_{2}z_{4}\\
 & = & -3z_{1}\bar{z}_{2}-\bar{z}_{2}z_{3}-2z_{1}\bar{z}_{4}-\bar{z}_{2}\bar{z}_{4}+5z_{1}+z_{3}+4\bar{z}_{2}+4\bar{z}_{4}-4.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
The first expression is highly non-submodular while the second is entirely
 submodular.
\end_layout

\begin_layout Section
Methods that introduce auxiliary variables to quadratize MULTIPLE terms
 with the SAME auxiliaries
\end_layout

\begin_layout Subsection
Reduction by Substitution
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
Pick a variable pair 
\begin_inset Formula $z_{i},z_{j}$
\end_inset

 and substitute 
\begin_inset Formula $z_{i}z_{j}$
\end_inset

 for new auxiliary variable 
\begin_inset Formula $a_{i,j}$
\end_inset

.
 Enforce equality in the ground states by adding some scalar multiple of
 
\begin_inset Formula $z_{i}z_{j}-2z_{i}a_{i,j}-2z_{i}a_{i,j}+3a_{i,j}$
\end_inset

 or similar 
\begin_inset CommandInset citation
LatexCommand cite
key "Boros2014"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Rosenberg1975"

\end_inset

.
\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Itemize
1 auxiliary variable per reduction.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Itemize
Variable can be used across the entire Hamiltonian, reducing many terms
 in one go.
\end_layout

\begin_layout Itemize
Simple.
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Itemize
Inefficient for single terms as it introduces lots of variables.
\end_layout

\begin_layout Itemize
Introduces quadratic terms with large positive coefficients, making them
 highly non-submodular.
\end_layout

\begin_layout Itemize
Determining optimal substitutions is expensive.
\end_layout

\begin_layout Subsubsection*
Example
\end_layout

\begin_layout Standard
We pick the pair 
\begin_inset Formula $(z_{1},z_{2})$
\end_inset

 and combine.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
z_{1}z_{2}z_{3}+z_{1}z_{2}z_{4}\mapsto z_{3}a+z_{4}a+z_{1}z_{2}-2z_{1}a-2z_{1}a+3a
\]

\end_inset


\end_layout

\begin_layout Subsection
FGBZ-reduc (Fix-Gruber-Boros-Zabih)
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Standard
Here we consider a set 
\begin_inset Formula $C$
\end_inset

 of variables which occur in multiple monomials throughout the Hamiltonian.
 Each application 
\begin_inset Quotes eld
\end_inset

rips out
\begin_inset Quotes erd
\end_inset

 this common component from each term 
\begin_inset CommandInset citation
LatexCommand cite
key "Fix2011"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Boros2014"

\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\mathcal{H}$
\end_inset

 be a set of monomials, where 
\begin_inset Formula $C\subseteq H$
\end_inset

 for each 
\begin_inset Formula $H\in\mathcal{H}$
\end_inset

 and each monomial 
\begin_inset Formula $H$
\end_inset

 has a weight 
\begin_inset Formula $\alpha_{H}$
\end_inset

.
 The algorithm comes in 2 parts: when all 
\begin_inset Formula $\alpha_{H}>0$
\end_inset

 and when all 
\begin_inset Formula $\alpha_{H}<0$
\end_inset

.
 Combining the 2 gives the final method.
\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\alpha_{H}>0$
\end_inset

 - one auxiliary variable per application.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\alpha_{H}<0$
\end_inset

 - one auxiliary variable per application.
\end_layout

\begin_layout Standard
Together, with 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Negative-Monomial-Reduction"

\end_inset

, they can be used to make an algorithm which can reduce 
\begin_inset Formula $t$
\end_inset

 positive monomials of degree 
\begin_inset Formula $d$
\end_inset

 in 
\begin_inset Formula $n$
\end_inset

 variables using 
\begin_inset Formula $n+t(d-1)$
\end_inset

 auxiliary variables in the worst case.
\end_layout

\begin_layout Subsubsection*
Pros
\end_layout

\begin_layout Subsubsection*
Cons
\end_layout

\begin_layout Standard
Positive method just turns positive terms into negative ones of same order,
 though these can then be reduced more easily.
\end_layout

\begin_layout Standard
\begin_inset Formula $\alpha_{H}<0$
\end_inset

 method only works for 
\begin_inset Formula $|C|>1$
\end_inset

, and cannot quadratize cubic terms.
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\alpha_{H}>0$
\end_inset

 
\begin_inset Formula 
\[
\sum_{H\in\mathcal{H}}\alpha_{H}\prod_{j\in H}z_{j}=\min_{a}(\sum_{H\in\mathcal{H}}\alpha_{H})a\prod_{j\in C}z_{j}+\sum_{H\in\mathcal{H}}\alpha_{H}(1-a)\prod_{j\in H\setminus C}z_{j}
\]

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\alpha_{H}<0$
\end_inset


\begin_inset Formula 
\[
\sum_{H\in\mathcal{H}}\alpha_{H}\prod_{j\in H}z_{j}=\min_{a}\sum_{H\in\mathcal{H}}\alpha_{H}(1-\prod_{j\in C}z_{j}-\prod_{j\in H\setminus C}z_{j})a
\]

\end_inset


\end_layout

\begin_layout Subsubsection*
Example
\end_layout

\begin_layout Standard
First let 
\begin_inset Formula $C=z_{1}$
\end_inset

 and use the positive weight version:
\begin_inset Formula 
\begin{eqnarray*}
z_{1}z_{2}z_{3}+z_{1}z_{2}z_{4} & \mapsto & 2a_{1}z_{1}+(1-a_{1})z_{2}z_{3}+(1-a_{1})z_{2}z_{4}\\
 & = & 2a_{1}z_{1}+z_{2}z_{3}+z_{2}z_{4}-a_{1}z_{2}z_{3}-a_{1}z_{2}z_{4}
\end{eqnarray*}

\end_inset

now we can use 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Negative-Monomial-Reduction"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
-a_{1}z_{2}z_{3}-a_{1}z_{2}z_{4} & \mapsto & 2a_{2}-a_{1}a_{2}-a_{2}z_{2}-a_{2}z_{3}+2a_{2}-a_{1}a_{2}-a_{2}z_{2}-a_{2}z_{4}\\
 & = & 4a_{2}-2a_{1}a_{2}-2a_{2}z_{2}-a_{2}z_{3}-a_{2}z_{4}.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Subsection
Generalized roof duality
\end_layout

\begin_layout Plain Layout
(only 1 extra qubit, but only works for up to 5-qubit terms.)
\end_layout

\begin_layout Plain Layout
Nike, where did you get the above from? When I search for this, with the
 relevant authors, I only find stuff on QPBO.
 I've spent a while reading papers on QPBO (fascinating stuff, very impressive
 and in some ways similar to what we've been trying/will try to do.
 Is the quantum community aware of their software??).
 I don't know what roof duality you're referring to.
\end_layout

\begin_layout Subsection
Generalized Roof Duality (QPBO)
\end_layout

\begin_layout Subsubsection*
Summary
\end_layout

\begin_layout Plain Layout
Algorithm that takes a quadratic Hamiltonian and tries to perform as much
 of the optimization as possible.
\end_layout

\begin_layout Subsubsection*
Cost
\end_layout

\begin_layout Plain Layout
For computer image problems, it can be used with the above methods to optimize
 most of the image in seconds/minutes.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ishikawa2014,Fix2011,Ishikawa2011"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Methods that reproduce the full spectrum
\end_layout

\begin_layout Standard
In all the above, we take advantage of the fact that we just want the correct
 state and we don't care about anything else.
 This gave us the freedom to do all sorts of things to the Hamiltonian,
 as long as we keep the ground state the same.
 What if we want to quadratize a Hamiltonian while preserving the whole
 spectrum? LHZ scheme and Paul Warburton's methods.
\end_layout

\begin_layout Section
Strategies for combining methods
\end_layout

\begin_layout Standard
Richard Ngo
\end_layout

\begin_layout Standard
Should look at ORI graph in 
\begin_inset CommandInset citation
LatexCommand cite
key "Gallagher2011"

\end_inset


\end_layout

\begin_layout Part
Hamiltonians with both 
\begin_inset Formula $z$
\end_inset

 & 
\begin_inset Formula $x$
\end_inset

 terms (general quantum Hamiltonians)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
H & =\alpha I+\sum_{i}^{n}\left(\alpha_{i}^{(z)}z_{i}+\alpha_{i}^{(x)}x_{i}+\alpha_{i}^{(y)}y_{i}\right)+\label{eq:XZ+Z-1}\\
 & \sum_{ij}^{n}\left(a_{ij}^{(zz)}z_{i}z_{j}+a_{ij}^{(zx)}z_{i}x_{j}+a_{ij}^{(zy)}z_{i}y_{j}+a_{ij}^{(xz)}x_{i}z_{j}+a_{ij}^{(xx)}x_{i}x_{j}+a_{ij}^{(xy)}x_{i}y_{j}+a_{ij}^{(yz)}y_{i}z_{j}+a_{ij}^{(yx)}y_{i}x_{j}+a_{ij}^{(yy)}y_{i}y_{j}\right)+\\
 & \sum_{ijk}^{n}\left(a_{ijk}^{(zzz)}z_{i}z_{j}z_{k}+a_{ijk}^{(zzx)}z_{i}z_{j}x_{k}+a_{ijk}^{(zzy)}z_{i}z_{j}y_{k}+a_{ijk}^{(zxz)}z_{i}x_{j}z_{k}+\cdots+a_{ijk}^{(yyy)}y_{i}y_{j}y_{k}\right)+\\
 & \sum_{ijkl\cdots n}^{n}\left(a_{ijkl\cdots n}^{(zzzz\cdots z)}z_{i}z_{j}z_{k}z_{l}\cdots z_{n}+a_{ijkl\cdots n}^{(zzz\cdots x)}z_{i}z_{j}z_{k}\cdots x_{n}+a_{ijkl\cdots n}^{(zzz\cdots y)}z_{i}z_{j}z_{k}\cdots y_{n}+a_{ijkl\cdots n}^{(zz\cdots xz)}z_{i}z_{j}\cdots x_{n-1}z_{n}+\cdots+a_{ijkl\cdots n}^{(yyy\cdots y)}y_{i}y_{j}y_{k}\cdots y_{n}\right)+
\end{align}

\end_inset


\end_layout

\begin_layout Standard
In the above we only have 
\begin_inset Formula $z$
\end_inset

 terms.
 If we have both 
\begin_inset Formula $z$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 then quadratization methods have a rich history, dating back to the perturbativ
e gadgets that were used by Kitaev and his camp for proving that the 
\begin_inset Formula $2$
\end_inset

-local Hamiltonian problem is QMA complete and that AQC is equiavent to
 circuit-based quantum computing.
 Jacob Biamonte came up with various schemes for quadratizion general spin
 Hamiltonians with only 1 auxiliary qubit for each reduction (quintic to
 quartic, quartic to cubic, cubic to quadratic, etc.).
 More recently, Ryan Babbush, Peter Love and Alan Aspuru-Guzik have used
 methods catered specifically to their AQC Hamiltonian for the electronic
 structure problem after a Bravyi-Kitaev transform.
 Below we show how the ideas above such as FGBZ can be generalized to the
 case where there's both 
\begin_inset Formula $z$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 terms.
 
\begin_inset Quotes eld
\end_inset

auxiliary qubit recycling
\begin_inset Quotes erd
\end_inset

, where the auxiliary qubit used to substitute 
\begin_inset Formula $x_{1}z_{1}$
\end_inset

 in 
\begin_inset Formula $x_{1}z_{1}z_{2}$
\end_inset

 can be reused, for example, in the quadratization of 
\begin_inset Formula $x_{1}z_{1}x_{2}$
\end_inset

.
\end_layout

\begin_layout Part
Appendix
\end_layout

\begin_layout Section
Further Examples
\end_layout

\begin_layout Subsubsection*
Example 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Example_Ramsey_deduc_reduc"

\end_inset


\end_layout

\begin_layout Standard
Consider 
\begin_inset Formula $\mathbb{\mathcal{R}}(4,3)$
\end_inset

 with 
\begin_inset Formula $N=4$
\end_inset

 nodes.
 Consider a Hamiltonian:
\begin_inset Formula 
\begin{eqnarray*}
H & = & (1-z_{12})(1-z_{13})(1-z_{23})+\ldots+(1-z_{23})(1-z_{24})(1-z_{34})+\\
 &  & z_{12}z_{13}z_{14}z_{23}z_{24}z_{34}.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
We should assume there are no 3-independent sets, so we have deductions:
 
\begin_inset Formula $(1-z_{ij})(1-z_{ik})(1-z_{jk})=0$
\end_inset

, for each 
\begin_inset Formula $i,j,k$
\end_inset

.
 
\end_layout

\end_inset

See 
\begin_inset CommandInset citation
LatexCommand cite
key "Okada2015"

\end_inset

 for full deatils of how we arrive at this Hamiltonian.
\end_layout

\begin_layout Standard
Since we are assuming we have no 3-independent sets, we know that 
\begin_inset Formula $(1-z_{12})(1-z_{13})(1-z_{23})=0$
\end_inset

, so 
\begin_inset Formula $z_{12}z_{13}z_{23}=z_{12}z_{13}+z_{12}z_{23}+z_{13}z_{23}-z_{12}-z_{13}-z_{23}+1$
\end_inset

.
 This will be our deduction.
\end_layout

\begin_layout Standard
Using deduc-reduc we can substitute this into our 6-local term to get:
\begin_inset Formula 
\begin{eqnarray*}
H & = & 2(1-z_{12})(1-z_{13})(1-z_{23})+\ldots+(1-z_{23})(1-z_{24})(1-z_{34})+\\
 &  & z_{14}z_{24}z_{34}(z_{12}z_{13}+z_{12}z_{23}+z_{13}z_{23}-z_{12}-z_{13}-z_{23}+1).
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
We could repeat this process to remove all 5- and 4-local terms without
 adding any auxiliary qubits.
 Note in this case the error terms added by deduc-reduc already appear in
 our Hamiltonian.
\end_layout

\begin_layout Section
Nike's Appendix
\end_layout

\begin_layout Standard
The left Kronecker product by a 
\begin_inset Formula $2\times2$
\end_inset

 identity matrix is implied by Eq.
 in the following way for qubit operators 
\begin_inset Formula $q\in\{z,x\}$
\end_inset

, assuming 
\begin_inset Formula $i<j$
\end_inset

 :
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
q_{i} & =\mathbf{1}^{\otimes i-1}q\mathbf{1}^{\otimes(N-i+1)}\\
q_{i}\bar{q}_{j} & =\mathbf{1}^{\otimes i-1}q\mathbf{1}^{\otimes(j-1+i)}\bar{q}\mathbf{1}^{\otimes(N-j+1)}.
\end{align}

\end_inset

Thinking in this way, with this notation might take some time to get used
 to, but tens of thousands of people are comfortable thinking this way (includin
g any undergraduate student after a 1-semester quantum computing course).
 You can now see that 
\begin_inset Formula $H$
\end_inset

 is a 
\begin_inset Formula $2^{N}\times2^{N}$
\end_inset

 matrix with elements that are complex numbers.
 
\begin_inset Quotes eld
\end_inset

Minimizing the Hamiltonian
\begin_inset Quotes erd
\end_inset

 just means finding the eigenvector of this matrix with lowest eigenvalue.
 On a classical computer, the cost of finding this eigenvector is the cost
 of diagonalizing the matrix: 
\begin_inset Formula $\mathcal{O}(2^{3N})$
\end_inset

, but undergraduate level quantum mechanics tells us that any physical system's
 state (wavefunction, 
\begin_inset Formula $\psi_{n}$
\end_inset

) is an eigenvector of a Hamiltonian and the eigenvalue 
\begin_inset Formula $E_{n}$
\end_inset

 is just the energy associated with being in the 
\begin_inset Formula $n^{{\rm th}}$
\end_inset

energy level: 
\begin_inset Formula 
\begin{equation}
H\psi_{n}=E_{n}\psi_{n}.\label{eq:TISE}
\end{equation}

\end_inset

Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:TISE"

\end_inset

 is just the time-independent version of the Schroedinger equation, which
 you have at least heard of.
 The diagonal elements are the energies of the 
\begin_inset Formula $n$
\end_inset

 levels and the off-diagonals are associated with the propensity for tunnelling
 from level 
\begin_inset Formula $n$
\end_inset

 to level 
\begin_inset Formula $m$
\end_inset

.
 Any 
\begin_inset Formula $2^{N}$
\end_inset

 level system can be represented by 
\begin_inset Formula $N$
\end_inset

 spin-
\begin_inset Formula $\nicefrac{1}{2}$
\end_inset

 particles (
\series bold
\bar under
qubtis
\series default
\bar default
), and an example of a spin-
\begin_inset Formula $\nicefrac{1}{2}$
\end_inset

 particle is simply an electron.
 Some of the 
\begin_inset Formula $N$
\end_inset

 electrons will have spin up and some will have spin down, hence 
\begin_inset Formula $2^{N}$
\end_inset

 possibilities.
 So instead of 
\begin_inset Formula $\mathcal{O}(2^{3N})$
\end_inset

 operations on a classical computer for finding the eigenvector with lowest
 eigenvalue (and hence doing the completely arbitrary computation), we can
 just (for example) put 
\begin_inset Formula $N$
\end_inset

 electrons together 
\begin_inset Note Comment
status open

\begin_layout Plain Layout
such that the 
\begin_inset Formula $2^{N}$
\end_inset

 energy levels have energies 
\begin_inset Formula $H_{ii}$
\end_inset

 and tunelling amplitudes 
\begin_inset Formula $H_{ij}$
\end_inset


\end_layout

\end_inset

with the appropriate 
\begin_inset Formula $H$
\end_inset

 describing their energy, and then cool the system down to its ground state.
 This ground state is one out of 
\begin_inset Formula $2^{N}$
\end_inset

 possible states , and the configuration of spin up and spin down electrons
 encodes the desired computation.
\end_layout

\begin_layout Section*
Acknowledgments
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status open

\begin_layout Plain Layout
The authors would like to acknowledge the use of the University of Oxford
 Advanced Research Computing (ARC) facility in carrying out this work (HTTP://dx.
doi.org/10.5281/zenodo.22558).
 The authors also thank the Oxford University Mathematical Institute and
 the various members who generously allowed us to use their compute servers
 for carrying out 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "C:/Users/Nike/Box Sync/library2,/Users/leroy/Dropbox (Personal)/NSD/Papers/library,C:/Users/Richard/Documents/Bibtex/library"
options "apsrev4-1"

\end_inset


\end_layout

\end_body
\end_document
